/// Unit tests in Rust are normally defined within such a `#[cfg(test)]`
    /// module and test functions are marked with a `#[test]` attribute.
    /// The below code is technically just normal Rust code.
    #[cfg(test)]
    mod tests {
        /// Imports all the definitions from the outer scope so we can use them here.
        use super::*;

        /// Imports `ink_lang` so we can use `#[ink::test]`.
        use ink_lang as ink;

        /// We test if the default constructor does its job.
        #[ink::test]
        fn default_works() {
            let psp34_contract = Psp34Contract::default();
            assert_eq!(psp34_contract.get(), false);
        }

        /// We test a simple use case of our contract.
        #[ink::test]
        fn it_works() {
            let mut psp34_contract = Psp34Contract::new(false);
            assert_eq!(psp34_contract.get(), false);
            psp34_contract.flip();
            assert_eq!(psp34_contract.get(), true);
        }
    }